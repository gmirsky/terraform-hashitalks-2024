name: Terraform-Plan

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to run against'
        type: string
        required: true
      working_directory:
        type: string
        required: true
      terraform_version:
        type: string
        required: false
        default: '1.5.7'
      environment_suffix:
        type: string
        required: false
        default: ''
    secrets:
      TERRAFORM_ARM_CLIENT_SECRET:
        required: true

jobs:

  terraform-plan:
    runs-on: self-hosted

    environment:
      name: ${{ inputs.environment }}

    steps:
    - uses: actions/checkout@v3

    - id: setup
      name: Setup `terraform`
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - id: plan
      name: Terraform Plan
      env:
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_CLIENT_ID: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}
        TF_VAR_application_name: ${{ vars.APPLICATION_NAME }}
        TF_VAR_environment_name: ${{ vars.ENVIRONMENT_NAME }}
      working-directory: ${{ inputs.working_directory }}
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.BACKEND_STORAGE_CONTAINER_NAME }}" \
          -backend-config="key=${{ vars.APPLICATION_NAME }}-${{ vars.ENVIRONMENT_NAME }}${{ inputs.environment_suffix }}"
          
        terraform plan
